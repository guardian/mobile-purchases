AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Validates mobile purchases
Parameters:
  Stack:
    Description: Stack name
    Type: String
  App:
    Description: Application name
    Type: String
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
  DeployBucket:
    Description: Bucket where RiffRaff uploads artifacts on deploy
    Type: String
  HostedZoneId:
    Description: HostedZoneId
    Type: String
  HostedZoneName:
    Description: HostedZoneName
    Type: String
  ApiCertArn:
    Description: ACM Certificate for api use
    Type: String
  AppCertArn:
    Description: ACM Certificate for app use
    Type: String
  AppDNS:
    Description: DNS used by app
    Type: String
  GooglePubSubSecret:
    Type: String
    Description: The secret used by google's pubsub
Resources:
  MobilePurchasesLambdasRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: logs
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - cloudwatch:putMetricData
              Resource: "*"
        - PolicyName: config
          PolicyDocument:
            Statement:
              Action:
                - ssm:GetParametersByPath
              Effect: Allow
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${App}/${Stage}/${Stack}
        - PolicyName: iosuserpurchases-config
          PolicyDocument:
            Statement:
              Action:
                - ssm:GetParametersByPath
              Effect: Allow
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${App}-iosuserpurchases/${Stage}/${Stack}
        - PolicyName: iosvalidatereceipts-config
          PolicyDocument:
            Statement:
              Action:
                - ssm:GetParametersByPath
              Effect: Allow
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${App}-iosvalidatereceipts/${Stage}/${Stack}
        - PolicyName: googleoauth-config
          PolicyDocument:
            Statement:
              Action:
                - ssm:GetParametersByPath
              Effect: Allow
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${App}/${Stage}/google-oauth-lambda
        - PolicyName: google-access-tokens
          PolicyDocument:
            Statement:
              Action:
                - s3:GetObject
                - s3:PutObject
              Effect: Allow
              Resource: !Sub arn:aws:s3:::gu-mobile-access-tokens/${Stage}/google-play-developer-api/*
        - PolicyName: dynamo
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:Query"
              Resource:
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${App}-${Stage}-${Stack}-user-purchases
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${App}-${Stage}-subscription-events
  LogGroupValidateReceipts:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub /aws/lambda/${App}-iosvalidatereceipts-${Stage}
      RetentionInDays: 7
  LogGroupUserPurchases:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub /aws/lambda/${App}-iosuserpurchases-${Stage}
      RetentionInDays: 7
  MobilePuchasesApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0.0"
          title: !Sub ${App}-${Stage}
        paths:
          "/validateReceipts":
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IosValidateReceiptsLambda.Arn}/invocations
              consumes: [ application/json ]
              produces: [ application/json ]
              responses:
                "200":
                  "description": "200 response"
          "/userPurchases":
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IosUserPurchasesLambda.Arn}/invocations
              produces: [ application/json ]
              responses:
                "200":
                  "description": "200 response"
          "/google/pubsub":
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GooglePubSubLambda.Arn}/invocations
              consumes: [ application/json ]
              produces: [ application/json ]
              responses:
                "200":
                  "description": "200 response"
          "/google/subscription/{subscriptionId}/status":
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GooglePlaySubStatusLambda.Arn}/invocations
              consumes: [ application/json ]
              produces: [ application/json ]
              responses:
                "200":
                  "description": "200 response"
          "/healthcheck":
            get:
              responses:
                "200":
                  description: "200 response"
              x-amazon-apigateway-integration:
                type: mock
                requestTemplates:
                  application/json: |
                    {
                      "statusCode" : 200
                    }
                httpMethod: GET
                responses:
                  default:
                    statusCode: "200"


  ApiDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref ApiCertArn
      DomainName: !Sub ${App}.${HostedZoneName}

  AppDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref AppCertArn
      DomainName: !Ref AppDNS


  ApiRoute53:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneId: !Ref HostedZoneId
        RecordSets:
          - Name: !Ref ApiDomainName
            Type: A
            AliasTarget:
              HostedZoneId: Z2FDTNDATAQYW2
              DNSName: !GetAtt
                - ApiDomainName
                - DistributionDomainName

  ApiMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref ApiDomainName
      RestApiId: !Ref MobilePuchasesApi
      Stage: !Ref Stage

  AppMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref AppDomainName
      RestApiId: !Ref MobilePuchasesApi
      Stage: !Ref Stage

  GoogleOAuthLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.gu.mobilepurchases.googleoauth.lambda.GoogleOAuth::handler
      Runtime: java8
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/${App}-googleoauth/${App}-googleoauth.jar
      FunctionName: !Sub ${App}-googleoauth-${Stage}
      Role: !GetAtt MobilePurchasesLambdasRole.Arn
      Environment:
        Variables:
          Stage: !Ref Stage
          Stack: !Ref Stack
          App: !Ref App
      Description: Fetches access tokens for the Google Play Developer API
      MemorySize: 512
      Timeout: 45
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
      Tags:
        Stage: !Ref Stage
        Stack: !Ref Stack
        App: !Ref App

  GooglePubSubLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: google-pubsub.handler
      Runtime: nodejs10.x
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/${App}-google-pubsub/google-pubsub.zip
      FunctionName: !Sub ${App}-googlepubsub-${Stage}
      Role: !GetAtt MobilePurchasesLambdasRole.Arn
      Environment:
        Variables:
          Stage: !Ref Stage
          Stack: !Ref Stack
          App: !Ref App
          Secret: !Ref GooglePubSubSecret
      Description: Records play store events
      MemorySize: 128
      Timeout: 45
      Events:
        PostApi:
          Type: Api
          Properties:
            Path: "/google/pubsub"
            Method: POST
            RestApiId: !Ref MobilePuchasesApi
      Tags:
        Stage: !Ref Stage
        Stack: !Ref Stack
        App: !Ref App

  GooglePlaySubStatusLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: google-playsubstatus.handler
      Runtime: nodejs10.x
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/${App}-google-playsubstatus/google-playsubstatus.zip
      FunctionName: !Sub ${App}-googleplaysubstatus-${Stage}
      Role: !GetAtt MobilePurchasesLambdasRole.Arn
      Environment:
        Variables:
          Stage: !Ref Stage
          Stack: !Ref Stack
          App: !Ref App
      Description: Checks the status of a Play Store subscription using the Google Play Developer API
      MemorySize: 128
      Timeout: 45
      Events:
        PostApi:
          Type: Api
          Properties:
            Path: "/google/subscription/{subscriptionId}/status"
            Method: GET
            RestApiId: !Ref MobilePuchasesApi
      Tags:
        Stage: !Ref Stage
        Stack: !Ref Stack
        App: !Ref App

  IosValidateReceiptsLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.gu.mobilepurchases.lambda.ValidateReceiptLambda::handleRequest
      Runtime: java8
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/${App}-iosvalidatereceipts/${App}-iosvalidatereceipts.jar
      FunctionName: !Sub ${App}-iosvalidatereceipts-${Stage}
      Role: !GetAtt MobilePurchasesLambdasRole.Arn
      Environment:
        Variables:
          Stage: !Ref Stage
          Stack: !Ref Stack
          App: !Ref App
      Description: Validates purchases
      MemorySize: 448
      Timeout: 45
      Events:
        PostApi:
          Type: Api
          Properties:
            Path: "/validateReceipts"
            Method: POST
            RestApiId: !Ref MobilePuchasesApi
      Tags:
        Stage: !Ref Stage
        Stack: !Ref Stack
        App: !Ref App

  IosUserPurchasesLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.gu.mobilepurchases.userpurchases.lambda.UserPurchasesLambda::handleRequest
      Runtime: java8
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/${App}-iosuserpurchases/${App}-iosuserpurchases.jar
      FunctionName: !Sub ${App}-iosuserpurchases-${Stage}
      Role: !GetAtt MobilePurchasesLambdasRole.Arn
      Environment:
        Variables:
          Stage: !Ref Stage
          Stack: !Ref Stack
          App: !Ref App
      Description: Gets user purchases
      MemorySize: 448
      Timeout: 45
      Events:
        GetApi:
          Type: Api
          Properties:
            Path: "/userPurchases"
            Method: GET
            RestApiId: !Ref MobilePuchasesApi
      Tags:
        Stage: !Ref Stage
        Stack: !Ref Stack
        App: !Ref App

  GoogleTokenRefreshFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:mobile-server-side
      AlarmName: !Sub mobile-purchases-${Stage}-google-oauth-token-refresh-failure
      AlarmDescription: !Sub Trigger the GoogleOAuth lambda manually to refresh the token
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref GoogleOAuthLambda
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching